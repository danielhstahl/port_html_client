{"version":3,"sources":["Additions/Additions.js","utils/styles.js","utils/helperFns.js","Submission/Submission.js","SharedComponents/AsyncHOC.js","actions/actions.js","actions/formActions.js","actions/apiActions.js","Submission/submissionActions.js","Submission/SubmissionContainer.js","Additions/additionConstants.js","Additions/additionsActions.js","Additions/AdditionsContainer.js","Reports/Reports.js","Reports/reportsActions.js","Reports/ReportsContainer.js","App.js","sharedReducers/axiosReducer.js","Submission/submissionReducer.js","Additions/additionsReducer.js","Reports/reportsReducer.js","reducers.js","index.js"],"names":["min","max","formStyle","labelCol","xs","span","sm","wrapperCol","buttonFormStyle","offset","inputStyle","width","buttonText","success","failure","defaultText","Option","Select","FormItem","Form","Item","verifyForm","materialAmount","transactionDate","isValidDate","match","isValidMaterialAmount","toString","AsyncHOC","get","WrappedComponent","Component","componentDidMount","Promise","all","map","g","this","props","render","loadMaterials","loadPorts","receivePort","selectReceivePort","possiblePorts","material","selectMaterial","possibleMaterials","selectMaterialAmount","providePort","selectProvidePort","comments","selectComments","selectTransactionDate","submit","toggleWarningModal","showWarningModal","loading","currySubmit","label","key","value","onChange","style","v","TextArea","rows","type","status","disabled","onClick","title","visible","onOk","onCancel","okText","cancelText","UPDATE_RECEIVE_PORT","UPDATE_PROVIDE_PORT","UPDATE_POSSIBLE_PORTS","UPDATE_POSSIBLE_MATERIALS","UPDATE_MATERIAL","UPDATE_MATERIAL_AMOUNT","UPDATE_COMMENTS","POPULATE_POSSIBLE_PORTS","UPDATE_TRANSACTION_DATE","TOGGLE_MODAL","TOGGLE_AXIOS_FAILURE","TOGGLE_AXIOS_SUCCESS","AXIOS_LOADING","POPULATE_POSSIBLE_MATERIALS","UPDATE_NEW_PORT","UPDATE_NEW_MATERIAL","UPDATE_REPORT_DATE","UPDATE_REPORT_DATA","generateFormValueAction","dispatch","generateFormDateAction","date","dateString","generateFormInputAction","e","target","setLoading","id","showAxiosResults","result","setTimeout","showAxiosFailure","toggleFailure","showAxiosSuccess","toggleSuccess","toggleModal","generateGet","url","fetch","method","then","res","json","data","Failure","submitNewTransaction","body","firstPort","Port","Material","Date","Amount","Comment","fullBody","secondPort","JSON","stringify","Error","catch","err","finally","connect","state","submission","axios","Submission","newPort","newMaterial","deleteAll","isBetweenSpec","length","Addition","val","updateVal","trackAxios","DeleteButton","danger","confirm","Modal","icon","ExclamationCircleOutlined","content","Additions","selectNewPort","selectNewMaterial","submitNewPort","submitNewMaterial","submitDeleteAll","portKey","materialKey","deleteKey","submitGeneric","text","setUpdate","additions","columns","dataIndex","reportKey","allDataKey","downloadText","getIdFromKeys","DownloadButton","selectAllData","Reports","setReportDate","selectReportData","reportDate","pagination","dataSource","i","filename","header","Object","keys","csv","row","fieldName","replace","join","unshift","blob","Blob","window","navigator","msSaveBlob","csvURL","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","appendChild","click","removeChild","downloadFile","reports","Header","Layout","Content","Footer","menuStyle","lineHeight","contentStyle","padding","contentDiv","background","minHeight","footerStyle","textAlign","ENTER_DATA_ROUTE","ADD_OPTIONS_ROUTE","RESULTS_ROUTE","AppMenu","location","theme","mode","selectedKeys","pathname","to","App","className","path","component","exact","from","defaultState","getToggle","defaultSubmission","combineReducers","action","store","createStore","reducer","ReactDOM","getElementById"],"mappings":"2IAUsBA,EAAKC,E,8ICVdC,EAAU,CACnBC,SAAU,CACNC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEhBE,WAAY,CACRH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAGPG,EAAiB,CAC1BD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KAKHC,EAAW,CAACC,MAAM,KCvBlBC,EAAW,CAACC,EAASC,EAASC,EAAY,WAAYF,GAAUC,EAAqBD,EAAQ,WAAW,WAAhCE,ECW/EC,EAASC,IAAOD,OAChBE,EAASC,IAAKC,KACdC,EAAW,CAACC,EAAgBC,KAE9B,IAAMC,EAAYD,EAAgBE,MAAM,4DAElCC,EAAsBJ,EAAeK,WAAWF,MAAM,cAC5D,OAAOD,GAAaE,GAmETE,ECpFA,KAAIC,IAAMC,GACrB,cAAcC,YACVC,oBACIC,QAAQC,IAAIL,EAAIM,KAAIC,GAAGA,EAAEC,KAAKC,UAElCC,SACI,OAAO,cAACT,EAAD,eAAsBO,KAAKC,UD8E/BV,EAHH,EAAEY,mBAAiBA,MACnB,EAAEC,eAAaA,KAEZb,EA/DE,EACbc,cAAaC,oBAAmBC,gBAChCC,WAAUC,iBAAgBC,oBAC1BzB,iBAAgB0B,uBAChBC,cAAaC,oBACbC,WAAUC,iBACV7B,kBAAiB8B,wBACjBC,SACAC,qBACAC,mBACAC,UACA5C,UACAC,cAEA,IAAM4C,EAAYJ,EAAO,CAACZ,cAAaG,WAAUvB,iBAAgB6B,WAAU5B,kBAAiB0B,gBAK5F,MAAO,CACH,wBAAC/B,EAAD,yBAAUyC,MAAM,oCAAuCzD,GAAvD,IAAkE0D,IAAI,gBAClE,cAAC,IAAD,CAAQC,MAAOnB,EAAaoB,SAAUnB,EAAmBoB,MAAOrD,EAAhE,SACKkC,EAAcT,KAAI6B,GAAG,cAAChD,EAAD,CAAQ6C,MAAOG,EAAf,SAA2BA,GAAJA,QAGrD,cAAC9C,EAAD,yBAAUyC,MAAM,mBAAoCzD,GAApD,aACI,cAAC,IAAD,CAAQ2D,MAAOhB,EAAUiB,SAAUhB,EAAgBiB,MAAOrD,EAA1D,SACKqC,EAAkBZ,KAAI6B,GAAG,cAAChD,EAAD,CAAQ6C,MAAOG,EAAf,SAA2BA,GAAJA,SAFnB,WAKtC,cAAC9C,EAAD,yBAAUyC,MAAM,uCAA4DzD,GAA5E,aACI,cAAC,IAAD,CAAa2D,MAAOvC,EAAgBwC,SAAUd,EAAsBe,MAAOrD,MADrB,eAG1D,cAACQ,EAAD,yBAAUyC,MAAM,oCAAmDzD,GAAnE,aACI,cAAC,IAAD,CAAY4D,SAAUT,EAAuBU,MAAOrD,MADD,SAGvD,cAACQ,EAAD,yBAAUyC,MAAM,mDAAkEzD,GAAlF,aACI,cAAC,IAAD,CAAQ2D,MAAOZ,EAAaa,SAAUZ,EAAmBa,MAAOrD,EAAhE,SACKkC,EAAcT,KAAI6B,GAAG,cAAChD,EAAD,CAAQ6C,MAAOG,EAAf,SAA2BA,GAAJA,SAFiB,SAKtE,cAAC9C,EAAD,yBAAUyC,MAAM,qBAAuCzD,GAAvD,aACI,cAAC,IAAM+D,SAAP,CAAgBC,KAAM,EAAGL,MAAOV,EAAUW,SAAUV,EAAgBW,MAAOrD,MADvC,YAGxC,cAACQ,EAAD,2BAAiCV,GAAjC,aACI,cAAC,IAAD,CAAQ2D,KAAK,UAAUV,QAASA,EAAQW,OAAQC,UAAWhD,EAAWC,EAAgBC,GAAkB+C,QAASrB,EAAYS,EAAYH,EAAzI,SAA8J3C,EAAWC,EAAQuD,OAAQtD,EAAQsD,YADvL,gBAGd,cAAC,IAAD,CAEIG,MAAM,GACNC,QAAShB,EACTiB,KApCc,KAClBf,IACAH,KAmCImB,SAAUnB,EACVoB,OAAO,6BACPC,WAAW,oCAPf,2DACQ,oBEtEHC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAA4B,4BAC5BC,EAAkB,kBAClBC,EAAyB,yBACzBC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAe,eACfC,EAAuB,gBACvBC,EAAuB,gBACvBC,EAAgB,gBAChBC,EAA8B,8BAC9BC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAAqB,qBCfrBC,EAAwB5B,GAAM6B,GAAUnC,GAAOmC,EAAS,CACjE7B,OACAN,UAESoC,EAAuB9B,GAAM6B,GAAU,CAACE,EAAMC,IAAaH,EAAS,CAC7E7B,OACAN,MAAMsC,IAEGC,EAAwBjC,GAAM6B,GAAUK,GAAGL,EAAS,CAC7D7B,OACAN,MAAMwC,EAAEC,OAAOzC,QCEN0C,EAAW,CAAC9C,EAAS+C,IAAKR,GAAUA,EAAS,CACtD7B,KAAKsB,EACL5B,MAAM,CACFO,OAAOX,EACP+C,QAIFC,EAAiBC,GAAQV,IAC3BA,EAASU,GACTC,YAAW,KACPX,EAASU,KAJS,MAObE,EAAiBJ,GAAIC,EAtBdD,KAAI,CACpBrC,KAAKoB,EACLiB,OAoB+CK,CAAcL,IACpDM,GAAiBN,GAAIC,EAnBdD,KAAI,CACpBrC,KAAKqB,EACLgB,OAiB+CO,CAAcP,ICHpD7D,GAAoBoD,EAAwBlB,GAC5C/B,GAAiBiD,EAAwBd,GACzCjC,GAAuB+C,EAAwBb,GAC/ChC,GAAoB6C,EAAwBjB,GAC5C1B,GAAiBgD,EAAwBjB,GACzC9B,GAAwB4C,EAAuBZ,GAE/C2B,GAAchB,GAAY,IAAMA,EAAS,CAClD7B,KAAMmB,IAEJ2B,GAAc,CAACC,EAAK/C,IAAS6B,GAAY,KAC3CmB,MAAMD,EAAK,CAAEE,OAAQ,QAASC,MAAKC,GAAOA,EAAIC,SAAQF,MAAMG,IACnDA,IAAQA,EAAKC,SAGlBzB,EAAS,CACL7B,OACAN,MAAO2D,QAINhF,GAAgByE,GAAY,YAAavB,GACzCjD,GAAYwE,GAAY,QAAS7B,GAEjCsC,GAAuB1B,GAAY,EAAGtD,cAAaG,WAAUvB,iBAAgB6B,WAAU5B,kBAAiB0B,iBAAkB,KACnIsD,GAAW,EAAXA,CAAiBP,GACjB,IAAM2B,EAAO,CACTC,UAAW,CACPC,KAAMnF,EACNoF,SAAUjF,EACVkF,KAAMxG,EACNyG,OAAQ1G,EACR2G,QAAS9E,IAGX+E,EAAWjF,EAAW,2BAEjB0E,GAFiB,IAGpBQ,WAAW,2BACJR,EAAKC,WADF,IAENC,KAAM5E,EACN+E,QAAS1G,MAGjBqG,EACJR,MAAM,eAAgB,CAAEC,OAAQ,OAAQO,KAAMS,KAAKC,UAAUH,KAAab,MAAKC,GAAOA,EAAIC,SAAQF,MAAMG,IACpG,GAAIA,EAAKC,QACL,MAAM,IAAIa,MAAMd,EAAKC,SAEzBX,GAAiB,aAAjBA,CAA+Bd,MAChCuC,OAAMC,IACL5B,EAAiB,aAAjBA,CAA+BZ,MAChCyC,SAAQ,KACPlC,GAAW,EAAXA,CAAkBP,OCnCX0C,gBA3BOC,IAAO,CACzBjG,YAAYiG,EAAMC,WAAWlG,YAC7BE,cAAc+F,EAAMC,WAAWhG,cAC/BC,SAAS8F,EAAMC,WAAW/F,SAC1BE,kBAAkB4F,EAAMC,WAAW7F,kBACnCzB,eAAeqH,EAAMC,WAAWtH,eAChC2B,YAAY0F,EAAMC,WAAW3F,YAC7BE,SAASwF,EAAMC,WAAWzF,SAC1BK,iBAAiBmF,EAAMC,WAAWpF,iBAClCC,QAAQkF,EAAME,MAAMpF,QACpB5C,QAAQ8H,EAAME,MAAMhI,QACpBC,QAAQ6H,EAAME,MAAM/H,QACpBS,gBAAgBoH,EAAMC,WAAWrH,oBAEZyE,IAAU,CAC/BrD,kBAAkBA,GAAkBqD,GACpClD,eAAeA,GAAekD,GAC9BhD,qBAAqBA,GAAqBgD,GAC1C9C,kBAAkBA,GAAkB8C,GACpC5C,eAAeA,GAAe4C,GAC9B3C,sBAAsBA,GAAsB2C,GAC5CzC,mBAAmByD,GAAYhB,GAC/B1C,OAAOoE,GAAqB1B,GAC5BxD,cAAcA,GAAcwD,GAC5BvD,UAAUA,GAAUuD,MAGT0C,CAA6CI,GC5C/CC,GAAU,OACVC,GAAc,WACdC,GAAY,S,UVOnB/H,GAAWC,IAAKC,KAEhB8H,IADgBlJ,EACa,EADRC,EACW,GADHkJ,GAAUA,EAASnJ,GAAOmJ,EAASlJ,GAKhEmJ,GAAW,EAAGC,MAAKC,YAAWhG,SAAQiG,aAAYhF,QAAOd,UAAS5C,UAASC,cAC7E,sBAAC,GAAD,yBAAU6C,MAAK,UAAKY,EAAL,2BAAwCrE,GAAvD,cACI,cAAC,IAAD,CAAO2D,MAAOwF,EAAKvF,SAAUwF,EAAWvF,MAAOrD,IAC/C,cAAC,IAAD,CAAQyD,KAAK,UAAUV,QAAS8F,GAAc9F,EAAQW,OAAQC,UANnDR,EAMyEwF,GANhEH,GAAcrF,EAAMsF,SAMkD7E,QAAShB,EAAnG,SAA4GiG,EAAa3I,EAAWC,EAAQuD,OAAQtD,EAAQsD,QAAUxD,GAAW,GAAO,SAN7KiD,OASb2F,GAAe,EAAGlG,SAAQiG,aAAY9F,UAAS5C,UAASC,aAC1D,cAAC,GAAD,yBAAU6C,MAAM,UAAazD,GAA7B,aAEI,cAAC,IAAD,CAAQuJ,QAAM,EAACtF,KAAK,UAAUV,QAAS8F,GAAc9F,EAAQW,OAAQE,QAASoF,GAAQpG,GAAtF,SAAgGiG,EAAa3I,EAAWC,EAAQuD,OAAQtD,EAAQsD,OAAQ,cAAgBxD,GAAW,GAAO,EAAO,mBAGnM8I,GAAWpG,GAAW,KACxBqG,IAAMD,QAAQ,CACVnF,MAAO,UACPqF,KAAM,cAACC,GAAA,EAAD,IACNC,QAAS,gBACTnF,OAAQ,SACRC,WAAY,SACZH,KAAMnB,KAuCCyG,GApCG,EACdhB,UAASiB,gBACThB,cAAaiB,oBACbC,gBAAeC,oBACfC,kBACA3G,UAAS5C,UAASC,aAAc,CAC5B,cAACsI,GAAD,CACI7E,MAAM,WAAW8E,IAAKN,EACtBO,UAAWU,EACXT,WAAY9F,EAAQ+C,KAAO6D,GAC3B5G,QAASA,EACT5C,QAASA,EACTC,QAASA,EACTwC,OAAQ4G,EAAcnB,IALSsB,IAOnC,cAACjB,GAAD,CACI7E,MAAM,oBACN8E,IAAKL,EACLM,UAAWW,EAEXV,WAAY9F,EAAQ+C,KAAO8D,GAC3B7G,QAASA,EACT5C,QAASA,EACTC,QAASA,EACTwC,OAAQ6G,EAAkBnB,IALrBsB,IAOT,cAACd,GAAD,CAEID,WAAY9F,EAAQ+C,KAAO+D,GAC3B9G,QAASA,EACT5C,QAASA,EACTC,QAASA,EACTwC,OAAQ8G,KALHG,KW3CJP,GAAgB5D,EAAwBT,GACxCsE,GAAoB7D,EAAwBR,GAEnD4E,GAAgB,CAACtD,EAAK/C,EAAMP,EAAKwD,EAAS,SAAWpB,GAAYyE,GAAQ,KAC3ElE,GAAW,EAAM3C,EAAjB2C,CAAsBP,GANR,EAAC7B,EAAMN,IAAUmC,GAAYA,EAAS,CAAE7B,OAAMN,UAO5D6G,CAAUvG,EAAMsG,EAAhBC,CAAsB1E,GACtBmB,MAAMD,EAAK,CAAEE,SAAQO,KAAMS,KAAKC,UAAU,CAAE,CAACzE,GAAM6G,MAC9CpD,MAAKC,GAAOA,EAAIC,SAAQF,MAAMG,IAC3B,GAAIA,EAAKC,QACL,MAAM,IAAIa,MAAMd,EAAKC,SAEzBX,GAAiBlD,EAAjBkD,CAAsBd,MACvBuC,OAAM,KACL3B,EAAiBhD,EAAjBgD,CAAsBZ,MACvByC,SAAQ,KACPlC,GAAW,EAAO3C,EAAlB2C,CAAuBP,OAGtBkE,GAAgBM,GAAc,QAASzF,EAAuBgE,IAC9DoB,GAAoBK,GAAc,YAAaxF,EAA2BgE,IAC1EoB,GAAkBI,GAAc,ONvBd,kBMuBuCvB,GAAW,UCdlEP,gBAfSC,IAAK,CACzBI,QAASJ,EAAMgC,UAAU5B,QACzBC,YAAaL,EAAMgC,UAAU3B,YAC7BvF,QAASkF,EAAME,MAAMpF,QACrB5C,QAAS8H,EAAME,MAAMhI,QACrBC,QAAS6H,EAAME,MAAM/H,YAEEkF,IAAQ,CAC/BgE,cAAeA,GAAchE,GAC7BiE,kBAAmBA,GAAkBjE,GACrCkE,cAAeA,GAAclE,GAC7BmE,kBAAmBA,GAAkBnE,GACrCoE,gBAAiBA,GAAgBpE,MAGtB0C,CAA6CqB,I,UCpBtD7I,GAASC,IAAKC,KAGdwJ,GAAU,CACZ,CACIrG,MAAO,OACPsG,UAAW,OACXjH,IAAK,QACN,CACCW,MAAO,SACPsG,UAAW,SACXjH,IAAK,UACN,CACCW,MAAO,WACPsG,UAAW,WACXjH,IAAK,aAIPkH,GAAU,aACVC,GAAW,UACXC,GAAa,kBACbC,GAAc,CAACpK,EAASC,EAAS8C,IAAM/C,EAAQ2F,KAAK5C,GAAK9C,EAAQ0F,KAAK5C,EACtEsH,GAAe,CAACC,EAAetK,EAASC,IAAU,IAAI,cAAC,IAAD,CAAQqD,KAAK,UAAUG,QAAS6G,EAAcJ,IAA9C,SAEpDE,GAAcpK,EAASC,EAASiK,IAChCnK,EAAWC,EAAQuD,OAAQtD,EAAQsD,OAAQ4G,IAC3CpK,GAAW,GAAO,EAAOoK,MAWlBI,GAPD,EAAEC,gBAAeC,mBAAkBH,gBAAeI,aAAY9H,UAAS5C,UAASC,UAAS0G,WAAS,OAC5G,wBAAC,GAAD,yBAAU7D,MAAM,yBAA4BzD,GAA5C,IAAuD0D,IAAKkH,KACxD,cAAC,IAAD,CAAYhH,SAAUuH,EAAetH,MAAOrD,IAC5C,cAAC,IAAD,CAAQyD,KAAK,UAAUV,QAASA,EAAQ+C,KAAKsE,IAAWrH,EAAQW,OAAQC,UAjC/DgF,EAiCqFkC,IAjChFlC,EAAIF,OAAO,IAiCkF7E,QAASgH,EAAiBR,GAAWS,GAAhJ,SAA8JN,GAAcpK,EAASC,EAASgK,IAAWlK,EAAWC,EAAQuD,OAAQtD,EAAQsD,QAAQxD,GAAW,GAAO,MAE1Q,cAAC,KAAD,CAAO4K,YAAY,EAAOjH,MAAO2G,GAAeC,EAAetK,EAASC,GAAU2K,WAAYjE,EAAMoD,QAASA,IAAa,iBAnC7GvB,OCOJgC,GAAgBpF,EAAuBJ,GACvCyF,GAAmBtF,GAAY,CAACpC,EAAK2H,IAAe,KAC7DhF,GAAW,EAAM3C,EAAjB2C,CAAsBP,GACtBmB,MAAM,oBAAD,OAAqBoE,GAAc,CAAEnE,OAAQ,QAASC,MAAKC,GAAOA,EAAIC,SAAQF,MAAMG,IACrF,GAAIA,EAAKC,QACL,MAAM,IAAIa,MAAMd,EAAKC,SAEzBzB,EAAS,CACL7B,KAAM2B,EACNjC,MAAO2D,EAAKrF,KAAI,CAAC6B,EAAG0H,IAAJ,aAAa9H,IAAK8H,GAAM1H,UAE7CuE,OAAM,KACL3B,EAAiBhD,EAAjBgD,CAAsBZ,MACvByC,SAAQ,KACPlC,GAAW,EAAO3C,EAAlB2C,CAAuBP,OAGlBmF,GAAgBnF,GAAYpC,GAAO,KAC5C2C,GAAW,EAAM3C,EAAjB2C,CAAsBP,GACtBmB,MAAM,eAAgB,CAAEC,OAAQ,QAASC,MAAKC,GAAOA,EAAIC,SAAQF,MAAMG,IACnE,GAAIA,EAAKC,QACL,MAAM,IAAIa,MAAMd,EAAKC,SZnCP,EAACF,EAAMoE,KAC7B,IAAMC,EAASC,OAAOC,KAAKvE,EAAK,IAC5BwE,EAAMxE,EAAKpF,KAAI6J,GAAOJ,EAAOzJ,KAAI8J,GAAa7D,KAAKC,UAAU2D,EAAIC,IAAc,IAAIC,QAAQ,OAAQ,IAAIA,QAAQ,sBAAuB,MAAKC,KAAK,OACpJJ,EAAIK,QAAQR,EAAOO,KAAK,MACxBJ,EAAMA,EAAII,KAAK,QACf,IAAME,EAAO,IAAIC,KAAK,CAACP,GAAM,CAAC5H,KAAM,aACpC,GAA2C,qBAAhCoI,OAAOC,UAAUC,WAKxBF,OAAOC,UAAUC,WAAWJ,EAAMV,OAEjC,CACD,IAAMe,EAASH,OAAOI,IAAIC,gBAAgBP,GACpCQ,EAAWC,SAASC,cAAc,KACxCF,EAASG,KAAON,EAChBG,EAASI,aAAa,WAAYtB,GAClCkB,EAASI,aAAa,SAAU,UAChCH,SAASnF,KAAKuF,YAAYL,GAC1BA,EAASM,QACTL,SAASnF,KAAKyF,YAAYP,KYgB1BQ,CAAa7F,EAAM,kBACpBe,OAAM,KACL3B,EAAiBhD,EAAjBgD,CAAsBZ,MACvByC,SAAQ,KACPlC,GAAW,EAAO3C,EAAlB2C,CAAuBP,OCnBhB0C,gBAbOC,IAAO,CACzBnB,KAAKmB,EAAM2E,QAAQ9F,KACnB+D,WAAW5C,EAAM2E,QAAQ/B,WACzB9H,QAAQkF,EAAME,MAAMpF,QACpB5C,QAAQ8H,EAAME,MAAMhI,QACpBC,QAAQ6H,EAAME,MAAM/H,YAECkF,IAAU,CAC/BqF,cAAcA,GAAcrF,GAC5BsF,iBAAiBA,GAAiBtF,GAClCmF,cAAcA,GAAcnF,MAGjB0C,CAA6C0C,ICXpDmC,GAA4BC,IAA5BD,OAAQE,GAAoBD,IAApBC,QAASC,GAAWF,IAAXE,OACnBC,GAAU,CAAEC,WAAY,QACxBC,GAAa,CAAEC,QAAS,UACxBC,GAAW,CAAEC,WAAY,OAAQF,QAAS,GAAIG,UAAW,KACzDC,GAAY,CAAEC,UAAW,UACzBC,GAAiB,cACjBC,GAAkB,eAClBC,GAAc,WAEdC,GAAQ,EAAEC,cACd,cAACjB,GAAD,UACI,eAAC,IAAD,CACEkB,MAAM,OACNC,KAAK,aACLC,aAAc,CAACH,EAASI,UACxB7K,MAAO4J,GAJT,UAME,cAAC,IAAKvM,KAAN,UAAkC,cAAC,IAAD,CAAMyN,GAAIT,GAAV,yBAAlBA,IAChB,cAAC,IAAKhN,KAAN,UAAmC,cAAC,IAAD,CAAMyN,GAAIR,GAAV,0BAAnBA,IAChB,cAAC,IAAKjN,KAAN,UAA+B,cAAC,IAAD,CAAMyN,GAAIP,GAAV,sBAAfA,SA2BTQ,GAtBL,IACV,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,UAAU,SAAlB,UAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWV,KAC3B,cAACd,GAAD,CAAS1J,MAAO8J,GAAhB,SACE,qBAAK9J,MAAOgK,GAAZ,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUmB,OAAK,EAACL,GAAIT,GAAkBe,KAAK,MAC3C,cAAC,IAAD,CAAOH,KAAMZ,GAAkBa,UAAWnG,KAC1C,cAAC,IAAD,CAAOkG,KAAMX,GAAmBY,UAAWlF,KAC3C,cAAC,IAAD,CAAOiF,KAAMV,GAAeW,UAAW7D,YAI7C,cAACsC,GAAD,CAAQ3J,MAAOmK,GAAf,8B,kBC9CEkB,GAAa,CACf3L,QAAQ,CACJW,QAAO,EACPoC,GAAG,IAEP3F,QAAQ,CACJuD,QAAO,EACPoC,GAAG,IAEP1F,QAAQ,CACJsD,QAAO,EACPoC,GAAG,KAGL6I,GAAU,CAAC1G,EAAO/E,EAAK4C,IAAb,YAAC,eACVmC,GADS,IAEZ,CAAC/E,GAAK,CACFQ,QAAQuE,EAAM/E,GAAKQ,OACnBoC,QCVF8I,GAAkB,CACpB5M,YAAY,GACZE,cAAc,GACdC,SAAS,GACTtB,gBAAgB,GAChBwB,kBAAkB,GAClBzB,eAAe,EACf2B,YAAY,GACZE,SAAS,GACTK,kBAAiB,GCjBf4L,GAAa,CACfrG,QAAQ,GACRC,YAAY,ICFVoG,GAAa,CACf7D,WAAW,GACX/D,KAAK,ICDM+H,gBAAgB,CAC3B1G,MJmBW,CAACF,EAAMyG,GAAcI,KAChC,OAAOA,EAAOrL,MACV,KAAKoB,EACD,OAAO8J,GAAU1G,EAAO,UAAW6G,EAAOhJ,IAC9C,KAAKhB,EACD,OAAO6J,GAAU1G,EAAO,UAAW6G,EAAOhJ,IAC9C,KAAKf,EACD,OAAO,2BAAIkD,GAAX,IAAkBlF,QAAQ+L,EAAO3L,QACrC,QACI,OAAO8E,II3BfC,WHkBW,CAACD,EAAM2G,GAAmBE,KACrC,OAAOA,EAAOrL,MACV,KAAKU,EACD,OAAO,2BAAI8D,GAAX,IAAkBjG,YAAY8M,EAAO3L,QACzC,KAAKoB,EACD,OAAO,2BAAI0D,GAAX,IAAkB9F,SAAS2M,EAAO3L,QACtC,KAAKwB,EACD,OAAO,2BAAIsD,GAAX,IAAkBpH,gBAAgBiO,EAAO3L,QAC7C,KAAKqB,EACD,OAAO,2BAAIyD,GAAX,IAAkBrH,eAAekO,EAAO3L,QAC5C,KAAKiB,EACD,OAAO,2BAAI6D,GAAX,IAAkB1F,YAAYuM,EAAO3L,QACzC,KAAKsB,EACD,OAAO,2BAAIwD,GAAX,IAAkBxF,SAASqM,EAAO3L,QACtC,KAAKkB,EACD,OAAO,2BAAI4D,GAAX,IAAkB/F,cAAc,IAAI+F,EAAM/F,cAAe4M,EAAO3L,SACpE,KAAKuB,EACD,OAAO,2BAAIuD,GAAX,IAAkB/F,cAAc4M,EAAO3L,QAC3C,KAAKmB,EACD,OAAO,2BAAI2D,GAAX,IAAkB5F,kBAAkB,IAAI4F,EAAM5F,kBAAmByM,EAAO3L,SAC5E,KAAK6B,EACD,OAAO,2BAAIiD,GAAX,IAAkB5F,kBAAkByM,EAAO3L,QAC/C,KAAKyB,EACD,OAAO,2BAAIqD,GAAX,IAAkBnF,kBAAkBmF,EAAMnF,mBAC9C,QACI,OAAOmF,IG1CfgC,UFCW,CAAChC,EAAMyG,GAAcI,KAChC,OAAOA,EAAOrL,MACV,KAAKwB,EACD,OAAO,2BAAIgD,GAAX,IAAkBI,QAAQyG,EAAO3L,QACrC,KAAK+B,EACD,OAAO,2BAAI+C,GAAX,IAAkBK,YAAYwG,EAAO3L,QACzC,QACI,OAAO8E,IEPf2E,QDDW,CAAC3E,EAAMyG,GAAcI,KAChC,OAAOA,EAAOrL,MACV,KAAK0B,EACD,OAAO,2BAAI8C,GAAX,IAAkB4C,WAAWiE,EAAO3L,QACxC,KAAKiC,EACD,OAAO,2BAAI6C,GAAX,IAAkBnB,KAAKgI,EAAO3L,QAClC,QACI,OAAO8E,MEPb8G,GAAQC,aAAYC,IAE1BC,IAASrN,OACP,cAAC,IAAD,CAAUkN,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF3C,SAAS+C,eAAe,W","file":"static/js/main.87929649.chunk.js","sourcesContent":["import React from 'react'\nimport { Input, Button, Form, Modal } from 'antd'\nimport { buttonText } from '../utils/helperFns'\nimport {\n    formStyle,\n    inputStyle\n} from '../utils/styles'\nimport { newPort as portKey, newMaterial as materialKey, deleteAll as deleteKey } from './additionConstants'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nconst FormItem = Form.Item\nconst getIsBetween = (min, max) => length => length > min && length < max\nconst isBetweenSpec = getIsBetween(0, 50)\nconst verifyForm = value => isBetweenSpec(value.length)\n\n\nconst Addition = ({ val, updateVal, submit, trackAxios, title, loading, success, failure }) => (\n    <FormItem label={`${title} (under 50 characters)`} {...formStyle}>\n        <Input value={val} onChange={updateVal} style={inputStyle} />\n        <Button type='primary' loading={trackAxios && loading.status} disabled={!verifyForm(val)} onClick={submit}>{trackAxios ? buttonText(success.status, failure.status) : buttonText(false, false)}</Button>\n    </FormItem>\n)\nconst DeleteButton = ({ submit, trackAxios, loading, success, failure }) => (\n    <FormItem label=\"Danger\" {...formStyle}>\n\n        <Button danger type='primary' loading={trackAxios && loading.status} onClick={confirm(submit)}>{trackAxios ? buttonText(success.status, failure.status, \"Delete All\") : buttonText(false, false, \"Delete All\")}</Button>\n    </FormItem>\n)\nconst confirm = (submit) => () => {\n    Modal.confirm({\n        title: 'Confirm',\n        icon: <ExclamationCircleOutlined />,\n        content: 'Are you sure?',\n        okText: 'Delete',\n        cancelText: 'Cancel',\n        onOk: submit\n    })\n}\nconst Additions = ({\n    newPort, selectNewPort,\n    newMaterial, selectNewMaterial,\n    submitNewPort, submitNewMaterial,\n    submitDeleteAll,\n    loading, success, failure }) => [\n        <Addition\n            title='Add Port' val={newPort}\n            updateVal={selectNewPort} key={portKey}\n            trackAxios={loading.id === portKey}\n            loading={loading}\n            success={success}\n            failure={failure}\n            submit={submitNewPort(newPort)}\n        />,\n        <Addition\n            title='Add Material Type'\n            val={newMaterial}\n            updateVal={selectNewMaterial}\n            key={materialKey}\n            trackAxios={loading.id === materialKey}\n            loading={loading}\n            success={success}\n            failure={failure}\n            submit={submitNewMaterial(newMaterial)}\n        />,\n        <DeleteButton\n            key={deleteKey}\n            trackAxios={loading.id === deleteKey}\n            loading={loading}\n            success={success}\n            failure={failure}\n            submit={submitDeleteAll()}\n        />,\n    ]\n\nexport default Additions","export const formStyle={\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    }\n}\nexport const buttonFormStyle= {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n}\n\nexport const inputStyle={width:500}","export const buttonText=(success, failure, defaultText='Submit')=>!success&&!failure?defaultText:(success?'Success!':'Failure!')\nexport const downloadFile=(json, filename)=>{\n    const header = Object.keys(json[0]);\n    let csv = json.map(row => header.map(fieldName => JSON.stringify(row[fieldName] || '').replace(/\\\\n/g, \"\").replace(/[|&;$%@\"<>()+\\\\/\"]/g, \"\")).join(','))\n    csv.unshift(header.join(','));\n    csv = csv.join('\\r\\n');\n    const blob = new Blob([csv], {type: 'text/csv'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were \n        // revoked by closing the blob for which they were created. \n        // These URLs will no longer resolve as the data backing \n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        const csvURL = window.URL.createObjectURL(blob);\n        const tempLink = document.createElement('a');\n        tempLink.href = csvURL;\n        tempLink.setAttribute('download', filename);\n        tempLink.setAttribute('target', '_blank');\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n    }\n}\n","import React from 'react'\nimport { Select, InputNumber, Input, Button, Modal, Form, DatePicker} from 'antd'\nimport AsyncHOC from '../SharedComponents/AsyncHOC'\nimport {\n    formStyle,\n    buttonFormStyle, \n    inputStyle\n} from '../utils/styles'\nimport {\n    buttonText\n} from '../utils/helperFns'\nconst Option = Select.Option\nconst FormItem=Form.Item\nconst verifyForm=(materialAmount, transactionDate)=>{\n    //date in yyyy-mm-dd\n    const isValidDate=transactionDate.match(/((19|20)\\d\\d)-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])/)\n    //integers\n    const isValidMaterialAmount=materialAmount.toString().match(/^[-+]?\\d+$/)\n    return isValidDate&&isValidMaterialAmount\n}\n\n\nconst Submission=({\n    receivePort, selectReceivePort, possiblePorts,\n    material, selectMaterial, possibleMaterials,\n    materialAmount, selectMaterialAmount,\n    providePort, selectProvidePort,\n    comments, selectComments,\n    transactionDate, selectTransactionDate,\n    submit,\n    toggleWarningModal,\n    showWarningModal, \n    loading,\n    success,\n    failure\n})=>{\n    const currySubmit=submit({receivePort, material, materialAmount, comments, transactionDate, providePort})\n    const toggleAndSubmit=()=>{\n        currySubmit()\n        toggleWarningModal()\n    }\n    return [\n        <FormItem label='Port that will receive materials' {...formStyle} key='receivePort'>\n            <Select value={receivePort} onChange={selectReceivePort} style={inputStyle}>\n                {possiblePorts.map(v=><Option value={v} key={v}>{v}</Option>)}\n            </Select>\n        </FormItem>,\n        <FormItem label='Select material' key='materal' {...formStyle}>\n            <Select value={material} onChange={selectMaterial} style={inputStyle}>\n                {possibleMaterials.map(v=><Option value={v} key={v}>{v}</Option>)}\n            </Select>\n        </FormItem>,\n        <FormItem label='Number of Materials (integers only)' key='materialnum' {...formStyle}>\n            <InputNumber value={materialAmount} onChange={selectMaterialAmount} style={inputStyle}/>\n        </FormItem>,\n        <FormItem label='Date of Transaction (yyyy-mm-dd)' key='tdate' {...formStyle}>\n            <DatePicker onChange={selectTransactionDate} style={inputStyle}/>\n        </FormItem>,\n        <FormItem label='Port that will provide materials (not required)' key='pport' {...formStyle}>\n            <Select value={providePort} onChange={selectProvidePort} style={inputStyle}>\n                {possiblePorts.map(v=><Option value={v} key={v}>{v}</Option>)}\n            </Select>\n        </FormItem>,\n        <FormItem label='Optional Comments' key='comments' {...formStyle}>\n            <Input.TextArea rows={4} value={comments} onChange={selectComments} style={inputStyle}/>\n        </FormItem>,\n        <FormItem key='submitbutton' {...buttonFormStyle}>\n            <Button type='primary' loading={loading.status} disabled={!verifyForm(materialAmount, transactionDate)} onClick={providePort?currySubmit:toggleWarningModal}>{buttonText(success.status, failure.status)}</Button>\n        </FormItem>,\n        <Modal\n            key='modalWarning'\n            title=\"\"\n            visible={showWarningModal}\n            onOk={toggleAndSubmit}\n            onCancel={toggleWarningModal}\n            okText='Ok.  I only want one port.'\n            cancelText='Not Ok!  Let me go back and edit.'\n        >\n            Warning: no second port selected.  Is this ok?\n        </Modal>\n    ]\n}\nconst loadM=({loadMaterials})=>loadMaterials()\nconst loadP=({loadPorts})=>loadPorts()\n\nexport default AsyncHOC(loadM, loadP)(Submission)","import React, {Component} from 'react'\nexport default (...get)=>WrappedComponent=>\n    class extends Component{\n        componentDidMount(){\n            Promise.all(get.map(g=>g(this.props)))\n        }\n        render(){\n            return <WrappedComponent {...this.props}/>\n        }\n    }\n","export const UPDATE_RECEIVE_PORT = 'UPDATE_RECEIVE_PORT'\nexport const UPDATE_PROVIDE_PORT = 'UPDATE_PROVIDE_PORT'\nexport const UPDATE_POSSIBLE_PORTS = 'UPDATE_POSSIBLE_PORTS'\nexport const UPDATE_POSSIBLE_MATERIALS = 'UPDATE_POSSIBLE_MATERIALS'\nexport const UPDATE_MATERIAL = 'UPDATE_MATERIAL'\nexport const UPDATE_MATERIAL_AMOUNT = 'UPDATE_MATERIAL_AMOUNT'\nexport const UPDATE_COMMENTS = 'UPDATE_COMMENTS'\nexport const POPULATE_POSSIBLE_PORTS = 'POPULATE_POSSIBLE_PORTS'\nexport const UPDATE_TRANSACTION_DATE = 'UPDATE_TRANSACTION_DATE'\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\nexport const TOGGLE_AXIOS_FAILURE = 'AXIOS_FAILURE'\nexport const TOGGLE_AXIOS_SUCCESS = 'AXIOS_SUCCESS'\nexport const AXIOS_LOADING = 'AXIOS_LOADING'\nexport const POPULATE_POSSIBLE_MATERIALS = 'POPULATE_POSSIBLE_MATERIALS'\nexport const UPDATE_NEW_PORT = 'UPDATE_NEW_PORT'\nexport const UPDATE_NEW_MATERIAL = 'UPDATE_NEW_MATERIAL'\nexport const UPDATE_REPORT_DATE = 'UPDATE_REPORT_DATE'\nexport const UPDATE_REPORT_DATA = 'UPDATE_REPORT_DATA'\nexport const DELETE_ALL_DATA = 'DELETE_ALL_DATA'\n","\n\nexport const generateFormValueAction=type=>dispatch=>value=>dispatch({\n    type,\n    value\n})\nexport const generateFormDateAction=type=>dispatch=>(date, dateString)=>dispatch({\n    type,\n    value:dateString\n})\nexport const generateFormInputAction=type=>dispatch=>e=>dispatch({\n    type,\n    value:e.target.value\n})\n","import {\n    TOGGLE_AXIOS_FAILURE,\n    TOGGLE_AXIOS_SUCCESS,\n    AXIOS_LOADING\n} from './actions'\n\nconst toggleFailure=id=>({\n    type:TOGGLE_AXIOS_FAILURE,\n    id\n})\nconst toggleSuccess=id=>({\n    type:TOGGLE_AXIOS_SUCCESS,\n    id\n})\nexport const setLoading=(loading, id)=>dispatch=>dispatch({\n    type:AXIOS_LOADING,\n    value:{\n        status:loading,\n        id\n    }\n})\nconst lengthToShowSuccess=2000\nconst showAxiosResults=result=>dispatch=>{\n    dispatch(result)\n    setTimeout(()=>{\n        dispatch(result)\n    }, lengthToShowSuccess)\n}\nexport const showAxiosFailure=id=>showAxiosResults(toggleFailure(id))\nexport const showAxiosSuccess=id=>showAxiosResults(toggleSuccess(id))\n\n","import {\n    UPDATE_RECEIVE_PORT,\n    UPDATE_PROVIDE_PORT,\n    UPDATE_MATERIAL,\n    UPDATE_MATERIAL_AMOUNT,\n    UPDATE_COMMENTS,\n    POPULATE_POSSIBLE_PORTS,\n    POPULATE_POSSIBLE_MATERIALS,\n    UPDATE_TRANSACTION_DATE,\n    TOGGLE_MODAL\n} from '../actions/actions'\n\nimport {\n    generateFormValueAction,\n    generateFormDateAction,\n    generateFormInputAction,\n\n} from '../actions/formActions'\n\nimport {\n    showAxiosFailure,\n    showAxiosSuccess,\n    setLoading\n} from '../actions/apiActions'\n\n\nexport const selectReceivePort = generateFormValueAction(UPDATE_RECEIVE_PORT)\nexport const selectMaterial = generateFormValueAction(UPDATE_MATERIAL)\nexport const selectMaterialAmount = generateFormValueAction(UPDATE_MATERIAL_AMOUNT)\nexport const selectProvidePort = generateFormValueAction(UPDATE_PROVIDE_PORT)\nexport const selectComments = generateFormInputAction(UPDATE_COMMENTS)\nexport const selectTransactionDate = generateFormDateAction(UPDATE_TRANSACTION_DATE)\n\nexport const toggleModal = dispatch => () => dispatch({\n    type: TOGGLE_MODAL\n})\nconst generateGet = (url, type) => dispatch => () => {\n    fetch(url, { method: 'GET' }).then(res => res.json()).then((data) => {\n        if (!data || data.Failure) {\n            return\n        }\n        dispatch({\n            type,\n            value: data\n        })\n    })\n}\nexport const loadMaterials = generateGet('/material', POPULATE_POSSIBLE_MATERIALS)\nexport const loadPorts = generateGet('/port', POPULATE_POSSIBLE_PORTS)\n\nexport const submitNewTransaction = dispatch => ({ receivePort, material, materialAmount, comments, transactionDate, providePort }) => () => {\n    setLoading(true)(dispatch)\n    const body = {\n        firstPort: {\n            Port: receivePort,\n            Material: material,\n            Date: transactionDate,\n            Amount: materialAmount,\n            Comment: comments\n        }\n    }\n    const fullBody = providePort ?\n        {\n            ...body,\n            secondPort: {\n                ...body.firstPort,\n                Port: providePort,\n                Amount: -materialAmount\n            }\n        } :\n        body\n    fetch('/transaction', { method: 'POST', body: JSON.stringify(fullBody) }).then(res => res.json()).then((data) => {\n        if (data.Failure) {\n            throw new Error(data.Failure)\n        }\n        showAxiosSuccess('submission')(dispatch)\n    }).catch(err => {\n        showAxiosFailure('submission')(dispatch)\n    }).finally(() => {\n        setLoading(false)(dispatch)\n    })\n}","import { connect } from 'react-redux'\nimport Submission from './Submission'\n\nimport {\n    selectReceivePort,\n    selectMaterial,\n    selectMaterialAmount,\n    selectProvidePort,\n    selectComments,\n    selectTransactionDate,\n    submitNewTransaction,\n    toggleModal,\n    loadMaterials,\n    loadPorts\n} from './submissionActions'\n\n\nconst mapStateToProps=state=>({\n    receivePort:state.submission.receivePort,\n    possiblePorts:state.submission.possiblePorts,\n    material:state.submission.material,\n    possibleMaterials:state.submission.possibleMaterials,\n    materialAmount:state.submission.materialAmount,\n    providePort:state.submission.providePort,\n    comments:state.submission.comments,\n    showWarningModal:state.submission.showWarningModal,\n    loading:state.axios.loading,\n    success:state.axios.success,\n    failure:state.axios.failure,\n    transactionDate:state.submission.transactionDate\n})\nconst mapDispatchToProps=dispatch=>({\n    selectReceivePort:selectReceivePort(dispatch),\n    selectMaterial:selectMaterial(dispatch),\n    selectMaterialAmount:selectMaterialAmount(dispatch),\n    selectProvidePort:selectProvidePort(dispatch),\n    selectComments:selectComments(dispatch),\n    selectTransactionDate:selectTransactionDate(dispatch),\n    toggleWarningModal:toggleModal(dispatch),\n    submit:submitNewTransaction(dispatch),\n    loadMaterials:loadMaterials(dispatch),\n    loadPorts:loadPorts(dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submission)","export const newPort = 'Port'\nexport const newMaterial = 'Material'\nexport const deleteAll = 'Delete'","import {\n    UPDATE_NEW_PORT,\n    UPDATE_NEW_MATERIAL,\n    UPDATE_POSSIBLE_PORTS,\n    UPDATE_POSSIBLE_MATERIALS,\n    DELETE_ALL_DATA\n} from '../actions/actions'\n\nimport {\n    generateFormInputAction,\n} from '../actions/formActions'\n\nimport {\n    showAxiosFailure,\n    showAxiosSuccess,\n    setLoading\n} from '../actions/apiActions'\nimport { newPort, newMaterial, deleteAll } from './additionConstants'\n\nconst setUpdate = (type, value) => dispatch => dispatch({ type, value })\n\nexport const selectNewPort = generateFormInputAction(UPDATE_NEW_PORT)\nexport const selectNewMaterial = generateFormInputAction(UPDATE_NEW_MATERIAL)\n\nconst submitGeneric = (url, type, key, method = 'POST') => dispatch => text => () => {\n    setLoading(true, key)(dispatch)\n    setUpdate(type, text)(dispatch)\n    fetch(url, { method, body: JSON.stringify({ [key]: text }) })\n        .then(res => res.json()).then((data) => {\n            if (data.Failure) {\n                throw new Error(data.Failure)\n            }\n            showAxiosSuccess(key)(dispatch)\n        }).catch(() => {\n            showAxiosFailure(key)(dispatch)\n        }).finally(() => {\n            setLoading(false, key)(dispatch)\n        })\n}\nexport const submitNewPort = submitGeneric('/port', UPDATE_POSSIBLE_PORTS, newPort)\nexport const submitNewMaterial = submitGeneric('/material', UPDATE_POSSIBLE_MATERIALS, newMaterial)\nexport const submitDeleteAll = submitGeneric('/all', DELETE_ALL_DATA, deleteAll, 'DELETE')\n\n","import { connect } from 'react-redux'\nimport Additions from './Additions'\n\nimport {\n    selectNewPort,\n    selectNewMaterial,\n    submitNewPort,\n    submitNewMaterial,\n    submitDeleteAll\n} from './additionsActions'\n\n\nconst mapStateToProps = state => ({\n    newPort: state.additions.newPort,\n    newMaterial: state.additions.newMaterial,\n    loading: state.axios.loading,\n    success: state.axios.success,\n    failure: state.axios.failure\n})\nconst mapDispatchToProps = dispatch => ({\n    selectNewPort: selectNewPort(dispatch),\n    selectNewMaterial: selectNewMaterial(dispatch),\n    submitNewPort: submitNewPort(dispatch),\n    submitNewMaterial: submitNewMaterial(dispatch),\n    submitDeleteAll: submitDeleteAll(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Additions)","import React from 'react'\nimport { DatePicker, Button, Form, Table} from 'antd'\nimport { buttonText } from '../utils/helperFns'\nimport {\n    formStyle,\n    inputStyle\n} from '../utils/styles'\nconst FormItem=Form.Item\nconst verifyForm=val=>val.length>0\n\nconst columns = [\n    {\n        title: 'Port',\n        dataIndex: 'Port',\n        key: 'Port',\n    }, {\n        title: 'Amount',\n        dataIndex: 'Amount',\n        key: 'Amount',\n    }, {\n        title: 'Material',\n        dataIndex: 'Material',\n        key: 'Material',\n    }\n]\n\nconst reportKey='getReports'\nconst allDataKey='allData'\nconst downloadText='Download to CSV'\nconst getIdFromKeys=(success, failure, key)=>success.id===key||failure.id===key\nconst DownloadButton=(selectAllData, success, failure)=>()=><Button type='primary' onClick={selectAllData(allDataKey)}>\n    { \n        getIdFromKeys(success, failure, allDataKey)?\n        buttonText(success.status, failure.status, downloadText):\n        buttonText(false, false, downloadText)\n    }\n</Button>\n\nconst Reports=({setReportDate, selectReportData, selectAllData, reportDate, loading, success, failure, data})=> [\n    <FormItem label='Select Reporting Date' {...formStyle} key={reportKey}>\n        <DatePicker onChange={setReportDate} style={inputStyle}/>\n        <Button type='primary' loading={loading.id===reportKey&&loading.status} disabled={!verifyForm(reportDate)} onClick={selectReportData(reportKey, reportDate)}>{getIdFromKeys(success, failure, reportKey)?buttonText(success.status, failure.status):buttonText(false, false)}</Button>\n    </FormItem>,\n    <Table pagination={false} title={DownloadButton(selectAllData, success, failure)} dataSource={data} columns={columns} key='displaytable'/>\n] \nexport default Reports","import {\n    UPDATE_REPORT_DATE,\n    UPDATE_REPORT_DATA\n} from '../actions/actions'\nimport {\n    setLoading,\n    showAxiosFailure\n} from '../actions/apiActions'\nimport {\n    generateFormDateAction\n} from '../actions/formActions'\nimport {\n    downloadFile\n} from '../utils/helperFns'\n\nexport const setReportDate = generateFormDateAction(UPDATE_REPORT_DATE)\nexport const selectReportData = dispatch => (key, reportDate) => () => {\n    setLoading(true, key)(dispatch)\n    fetch(`/all?report_date=${reportDate}`, { method: 'GET' }).then(res => res.json()).then((data) => {\n        if (data.Failure) {\n            throw new Error(data.Failure)\n        }\n        dispatch({\n            type: UPDATE_REPORT_DATA,\n            value: data.map((v, i) => ({ key: i, ...v }))\n        })\n    }).catch(() => {\n        showAxiosFailure(key)(dispatch)\n    }).finally(() => {\n        setLoading(false, key)(dispatch)\n    })\n}\nexport const selectAllData = dispatch => key => () => {\n    setLoading(true, key)(dispatch)\n    fetch('/transaction', { method: 'GET' }).then(res => res.json()).then((data) => {\n        if (data.Failure) {\n            throw new Error(data.Failure)\n        }\n        downloadFile(data, 'results.csv')\n    }).catch(() => {\n        showAxiosFailure(key)(dispatch)\n    }).finally(() => {\n        setLoading(false, key)(dispatch)\n    })\n}","import { connect } from 'react-redux'\nimport Reports from './Reports'\n\nimport {\n    setReportDate,\n    selectReportData, \n    selectAllData\n} from './reportsActions'\n\n\nconst mapStateToProps=state=>({\n    data:state.reports.data,\n    reportDate:state.reports.reportDate,\n    loading:state.axios.loading,\n    success:state.axios.success,\n    failure:state.axios.failure\n})\nconst mapDispatchToProps=dispatch=>({\n    setReportDate:setReportDate(dispatch),\n    selectReportData:selectReportData(dispatch),\n    selectAllData:selectAllData(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports)","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport Submission from './Submission/SubmissionContainer'\nimport Additions from './Additions/AdditionsContainer'\nimport Reports from './Reports/ReportsContainer'\nconst { Header, Content, Footer } = Layout\nconst menuStyle={ lineHeight: '64px' }\nconst contentStyle={ padding: '0 50px' }\nconst contentDiv={ background: '#fff', padding: 24, minHeight: 280 }\nconst footerStyle={ textAlign: 'center' }\nconst ENTER_DATA_ROUTE='/enter_data'\nconst ADD_OPTIONS_ROUTE='/add_options'\nconst RESULTS_ROUTE='/results'\n\nconst AppMenu=({location})=>(\n  <Header>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        selectedKeys={[location.pathname]}\n        style={menuStyle}\n      >\n        <Menu.Item key={ENTER_DATA_ROUTE}><Link to={ENTER_DATA_ROUTE}>Enter Data</Link></Menu.Item>\n        <Menu.Item key={ADD_OPTIONS_ROUTE}><Link to={ADD_OPTIONS_ROUTE}>Add Options</Link></Menu.Item>\n        <Menu.Item key={RESULTS_ROUTE}><Link to={RESULTS_ROUTE}>Results</Link></Menu.Item>\n      </Menu>\n    </Header>\n)\n\nconst App=()=>(\n<Router>\n  <Layout className=\"layout\">\n    \n    <Route path='/' component={AppMenu} />    \n    <Content style={contentStyle}>\n      <div style={contentDiv}>\n        <Switch>\n          <Redirect exact to={ENTER_DATA_ROUTE} from='/'/>\n          <Route path={ENTER_DATA_ROUTE} component={Submission}/>\n          <Route path={ADD_OPTIONS_ROUTE} component={Additions}/>\n          <Route path={RESULTS_ROUTE} component={Reports}/>\n        </Switch>\n      </div>\n    </Content>\n    <Footer style={footerStyle}>\n      Port Client\n    </Footer>\n  </Layout>\n</Router>\n)\n\nexport default App\n","import {\n    TOGGLE_AXIOS_FAILURE,\n    TOGGLE_AXIOS_SUCCESS,\n    AXIOS_LOADING\n} from '../actions/actions'\nconst defaultState={\n    loading:{\n        status:false,\n        id:''\n    },\n    success:{\n        status:false,\n        id:''\n    },\n    failure:{\n        status:false,\n        id:''\n    }\n}\nconst getToggle=(state, key, id)=>({\n    ...state,\n    [key]:{\n        status:!state[key].status,\n        id\n    }\n})\nexport default (state=defaultState, action)=>{\n    switch(action.type){\n        case TOGGLE_AXIOS_FAILURE:\n            return getToggle(state, 'failure', action.id)\n        case TOGGLE_AXIOS_SUCCESS:\n            return getToggle(state, 'success', action.id)\n        case AXIOS_LOADING:\n            return {...state, loading:action.value}\n        default:\n            return state\n    }\n}","import {\n    UPDATE_RECEIVE_PORT,\n    UPDATE_PROVIDE_PORT,\n    UPDATE_POSSIBLE_PORTS,\n    UPDATE_POSSIBLE_MATERIALS,\n    UPDATE_MATERIAL,\n    UPDATE_MATERIAL_AMOUNT,\n    UPDATE_COMMENTS,\n    POPULATE_POSSIBLE_PORTS,\n    UPDATE_TRANSACTION_DATE,\n    TOGGLE_MODAL,\n    POPULATE_POSSIBLE_MATERIALS\n} from '../actions/actions'\nconst defaultSubmission={\n    receivePort:'',\n    possiblePorts:[],\n    material:'',\n    transactionDate:'',\n    possibleMaterials:[],\n    materialAmount:0,\n    providePort:'',\n    comments:'',\n    showWarningModal:false,\n\n}\n\nexport default (state=defaultSubmission, action)=>{\n    switch(action.type){\n        case UPDATE_RECEIVE_PORT:\n            return {...state, receivePort:action.value}\n        case UPDATE_MATERIAL:\n            return {...state, material:action.value}\n        case UPDATE_TRANSACTION_DATE:\n            return {...state, transactionDate:action.value}\n        case UPDATE_MATERIAL_AMOUNT:\n            return {...state, materialAmount:action.value}\n        case UPDATE_PROVIDE_PORT:\n            return {...state, providePort:action.value}\n        case UPDATE_COMMENTS:\n            return {...state, comments:action.value}\n        case UPDATE_POSSIBLE_PORTS:\n            return {...state, possiblePorts:[...state.possiblePorts, action.value]}\n        case POPULATE_POSSIBLE_PORTS:\n            return {...state, possiblePorts:action.value}\n        case UPDATE_POSSIBLE_MATERIALS:\n            return {...state, possibleMaterials:[...state.possibleMaterials, action.value]}\n        case POPULATE_POSSIBLE_MATERIALS:\n            return {...state, possibleMaterials:action.value}\n        case TOGGLE_MODAL:\n            return {...state, showWarningModal:!state.showWarningModal}\n        default:\n            return state\n    }\n}","import {\n    UPDATE_NEW_PORT,\n    UPDATE_NEW_MATERIAL\n} from '../actions/actions'\n\nconst defaultState={\n    newPort:'',\n    newMaterial:''\n}\n\nexport default (state=defaultState, action)=>{\n    switch(action.type){\n        case UPDATE_NEW_PORT:\n            return {...state, newPort:action.value}\n        case UPDATE_NEW_MATERIAL:\n            return {...state, newMaterial:action.value}\n        default:\n            return state\n    }\n}","import {\n    UPDATE_REPORT_DATE,\n    UPDATE_REPORT_DATA\n} from '../actions/actions'\n\nconst defaultState={\n    reportDate:'',\n    data:[]\n}\nexport default (state=defaultState, action)=>{\n    switch(action.type){\n        case UPDATE_REPORT_DATE:\n            return {...state, reportDate:action.value}\n        case UPDATE_REPORT_DATA:\n            return {...state, data:action.value}\n        default:\n            return state\n    }\n}\n","import axios from './sharedReducers/axiosReducer'\nimport submission from './Submission/submissionReducer'\nimport additions from './Additions/additionsReducer'\nimport reports from './Reports/reportsReducer'\nimport { combineReducers } from 'redux'\n\nexport default combineReducers({\n    axios,\n    submission,\n    additions,\n    reports\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}